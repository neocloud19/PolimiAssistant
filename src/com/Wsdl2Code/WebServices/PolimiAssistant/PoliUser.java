package com.Wsdl2Code.WebServices.PolimiAssistant;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/27/2014 10:01:46 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class PoliUser implements KvmSerializable {
    
    public String name;
    public String surname;
    public String person_code;
    public String password;
    public String matricola;
    public String email;
    public String auth_token;
    public String auth_token_date;
    public int id;
    public boolean valid;
    public String errMessage;
    
    public PoliUser(){}
    
    public PoliUser(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("name"))
        {
            Object obj = soapObject.getProperty("name");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                name = j.toString();
            }else if (obj!= null && obj instanceof String){
                name = (String) obj;
            }
        }
        if (soapObject.hasProperty("surname"))
        {
            Object obj = soapObject.getProperty("surname");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                surname = j.toString();
            }else if (obj!= null && obj instanceof String){
                surname = (String) obj;
            }
        }
        if (soapObject.hasProperty("person_code"))
        {
            Object obj = soapObject.getProperty("person_code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                person_code = j.toString();
            }else if (obj!= null && obj instanceof String){
                person_code = (String) obj;
            }
        }
        if (soapObject.hasProperty("password"))
        {
            Object obj = soapObject.getProperty("password");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                password = j.toString();
            }else if (obj!= null && obj instanceof String){
                password = (String) obj;
            }
        }
        if (soapObject.hasProperty("matricola"))
        {
            Object obj = soapObject.getProperty("matricola");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                matricola = j.toString();
            }else if (obj!= null && obj instanceof String){
                matricola = (String) obj;
            }
        }
        if (soapObject.hasProperty("email"))
        {
            Object obj = soapObject.getProperty("email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                email = j.toString();
            }else if (obj!= null && obj instanceof String){
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("auth_token"))
        {
            Object obj = soapObject.getProperty("auth_token");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                auth_token = j.toString();
            }else if (obj!= null && obj instanceof String){
                auth_token = (String) obj;
            }
        }
        if (soapObject.hasProperty("auth_token_date"))
        {
            Object obj = soapObject.getProperty("auth_token_date");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                auth_token_date = j.toString();
            }else if (obj!= null && obj instanceof String){
                auth_token_date = (String) obj;
            }
        }
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Valid"))
        {
            Object obj = soapObject.getProperty("Valid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                valid = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                valid = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ErrMessage"))
        {
            Object obj = soapObject.getProperty("ErrMessage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                errMessage = j.toString();
            }else if (obj!= null && obj instanceof String){
                errMessage = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return name;
            case 1:
                return surname;
            case 2:
                return person_code;
            case 3:
                return password;
            case 4:
                return matricola;
            case 5:
                return email;
            case 6:
                return auth_token;
            case 7:
                return auth_token_date;
            case 8:
                return id;
            case 9:
                return valid;
            case 10:
                return errMessage;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 11;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "name";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "surname";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "person_code";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "password";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "matricola";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "email";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "auth_token";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "auth_token_date";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "id";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Valid";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ErrMessage";
                break;
        }
    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
